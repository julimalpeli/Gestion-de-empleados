                                {isAguinaldoPeriod(record.period) &&
                                  record.aguinaldo > 0 && (
                                    <div className="text-xs text-green-600">
                                      Incluye aguinaldo:{" "}
                                      {formatCurrency(record.aguinaldo)}
                                    </div>
                                  )}
                              </TableCell>
                              <TableCell>
                                <div className="flex flex-col gap-1">
                                  <Badge
                                    variant={
                                      record.status === "processed"
                                        ? "default"
                                        : record.status === "pending"
                                          ? "secondary"
                                          : record.status === "approved"
                                            ? "default"
                                            : record.status === "paid"
                                              ? "default"
                                              : "outline"
                                    }
                                    className={
                                      record.status === "paid"
                                        ? "bg-green-100 text-green-800 hover:bg-green-100"
                                        : record.status === "approved"
                                          ? "bg-blue-100 text-blue-800 hover:bg-blue-100"
                                          : ""
                                    }
                                  >
                                    {record.status === "processed"
                                      ? "Procesada"
                                      : record.status === "pending"
                                        ? "Pendiente"
                                        : record.status === "approved"
                                          ? "Aprobada"
                                          : record.status === "paid"
                                            ? "Pagada"
                                            : "Borrador"}
                                  </Badge>
                                  {record.processedDate && (
                                    <span className="text-xs text-muted-foreground">
                                      {new Date(
                                        record.processedDate,
                                      ).toLocaleDateString("es-AR")}
                                    </span>
                                  )}
                                </div>
                              </TableCell>
                              <TableCell>
                                <Tooltip>
                                  <TooltipTrigger asChild>
                                    <Button
                                      variant="ghost"
                                      size="sm"
                                      onClick={() => {
                                        const employee = employees.find(
                                          (e) => e.name === record.employeeName,
                                        );
                                        if (employee) {
                                          setSelectedPayrollRecord(record);
                                          setSelectedEmployeeForDocs(employee);
                                          setIsPayrollDocManagerOpen(true);
                                        }
                                      }}
                                    >
                                      <FileText className="h-4 w-4" />
                                    </Button>
                                  </TooltipTrigger>
                                  <TooltipContent>
                                    <p>
                                      Gestionar documentos de esta liquidación
                                    </p>
                                  </TooltipContent>
                                </Tooltip>
                              </TableCell>
                              <TableCell className="text-right">
                                <div className="flex items-center justify-end gap-1">
                                  <Tooltip>
                                    <TooltipTrigger asChild>
                                      <Button
                                        variant="ghost"
                                        size="sm"
                                        onClick={() => handleEditRecord(record)}
                                        disabled={
                                          record.status === "paid" ||
                                          (record.status === "processed" &&
                                            !isAdmin())
                                        }
                                      >
                                        <Calculator className="h-4 w-4" />
                                      </Button>
                                    </TooltipTrigger>
                                    <TooltipContent>
                                      <p>
                                        {record.status === "paid"
                                          ? "No se puede editar liquidación pagada"
                                          : record.status === "processed" &&
                                              !isAdmin()
                                            ? "Solo admin puede editar liquidaciones procesadas"
                                            : "Editar liquidación"}
                                      </p>
                                    </TooltipContent>
                                  </Tooltip>

                                  <Tooltip>
                                    <TooltipTrigger asChild>
                                      <Button
                                        variant="ghost"
                                        size="sm"
                                        onClick={() => generatePayslip(record)}
                                      >
                                        <FileText className="h-4 w-4" />
                                      </Button>
                                    </TooltipTrigger>
                                    <TooltipContent>
                                      <p>Generar recibo</p>
                                    </TooltipContent>
                                  </Tooltip>

                                  {isAdmin() && (
                                    <Tooltip>
                                      <TooltipTrigger asChild>
                                        <Button
                                          variant="ghost"
                                          size="sm"
                                          onClick={() => {
                                            setRecordToDelete(record);
                                            setDeleteConfirmOpen(true);
                                          }}
                                          className="text-red-600 hover:text-red-700"
                                        >
                                          <Trash2 className="h-4 w-4" />
                                        </Button>
                                      </TooltipTrigger>
                                      <TooltipContent>
                                        <p>Eliminar liquidación</p>
                                      </TooltipContent>
                                    </Tooltip>
                                  )}
                                </div>
                              </TableCell>
                            </TableRow>
                          ))}
                      </TableBody>
                    </Table>
                  </div>
                )}
              </CardContent>
            </Card>
          </TabsContent>
        </Tabs>

        {/* Delete Confirmation Dialog */}
        <AlertDialog
          open={deleteConfirmOpen}
          onOpenChange={setDeleteConfirmOpen}
        >
          <AlertDialogContent>
            <AlertDialogHeader>
              <AlertDialogTitle>¿Estás seguro?</AlertDialogTitle>
              <AlertDialogDescription>
                Esta acción no se puede deshacer. Esto eliminará permanentemente
                la liquidación de{" "}
                <strong>{recordToDelete?.employeeName}</strong> del período{" "}
                <strong>{recordToDelete?.period}</strong> y todos sus datos
                asociados.
              </AlertDialogDescription>
            </AlertDialogHeader>
            <AlertDialogFooter>
              <AlertDialogCancel>Cancelar</AlertDialogCancel>
              <AlertDialogAction onClick={handleDeletePayroll}>
                Eliminar
              </AlertDialogAction>
            </AlertDialogFooter>
          </AlertDialogContent>
        </AlertDialog>

        {/* Success Message */}
        {successMessage && (
          <div className="fixed bottom-4 right-4 bg-green-600 text-white px-6 py-3 rounded-lg shadow-lg z-50">
            <div className="flex items-center gap-2">
              <div className="text-sm font-medium">{successMessage}</div>
              <button
                onClick={() => setSuccessMessage("")}
                className="ml-2 text-white hover:text-green-200"
              >
                ×
              </button>
            </div>
          </div>
        )}

        {/* Payroll-specific Document Manager */}
        <DocumentManager
          isOpen={isPayrollDocManagerOpen}
          onClose={() => {
            setIsPayrollDocManagerOpen(false);
            setSelectedPayrollRecord(null);
            setSelectedEmployeeForDocs(null);
          }}
          employee={selectedEmployeeForDocs}
          payrollId={selectedPayrollRecord?.id}
          title={`Documentos - ${selectedPayrollRecord?.employeeName} (${selectedPayrollRecord?.period ? formatPeriod(selectedPayrollRecord.period) : ""})`}
        />
      </div>
    </TooltipProvider>
  );
};

export default Payroll;
